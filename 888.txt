static const auto io_speed_up=[]{
    ios::sync_with_stdio(false);
    cin.tie(0);
    return 0;
}();
class Solution {
public:
vector<int> fairCandySwap(vector<int>& A, vector<int>& B) 
{
	int sumA = 0, sumB = 0;
	unordered_set<int> b;
	for (auto ita = A.begin(); ita != A.end(); ++ita)
	{
		sumA += *ita;
	}
	for (auto itb = B.begin(); itb != B.end(); ++itb)
	{
		sumB += *itb;
		b.insert(*itb);
	}

	int dif = (sumA - sumB) / 2;
	for (auto ita = A.begin(); ita != A.end(); ++ita)
	{
		if(b.count(*ita - dif))
			return vector<int>({ *ita, *ita -dif });
		//if (sumA - *ita + *itb == sumB - *itb + *ita)
		//(sumA - sumB)/2  == - *itb + *ita
		//dif + *itb = *ita;
		//*ita - dif = *itb;
	}
	return vector<int>({ -1,-1 });
}
};