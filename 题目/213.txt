class Solution 
{
public:
	int rob(std::vector<int>& nums) 
	{
		int n = nums.size();
		int max = INT_MIN;
		if (n <= 3)
		{
			for (int i : nums)
				max = std::max(max, i);
			return max;
		}

		auto dp = std::vector<int>(n, 0);
		dp[0] = 0;
		dp[1] = nums[1];
		for (int i = 2; i < n; i++)
		{
			if (i - 2 >= 0)
				dp[i] = std::max(dp[i - 1], dp[i - 2] + nums[i]);
			else
				dp[i] = dp[i - 1];
			max = std::max(max, dp[i]);
		}
		dp[0] = nums[0];
		for (int i = 1; i < n - 1; i++)
		{
			if (i - 2 >= 0)
				dp[i] = std::max(dp[i - 1], dp[i - 2] + nums[i]);
			else
				dp[i] = dp[i - 1];
			max = std::max(max, dp[i]);
		}
		return max;
	}
};