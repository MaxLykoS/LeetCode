class Solution
{
public:
	int rob(std::vector<int>& nums)
	{
		if (nums.size() == 1)
			return nums.front();
		if (nums.size() == 2)
			return std::max(nums.front(), nums.back());
		
		std::vector<int> dp(nums.size(), 0);

		// 选0
		dp[0] = nums[0];
		dp[1] = dp[0];
		for (int i = 2; i < dp.size() - 1; ++i)
		{
			dp[i] = std::max(dp[i - 1], dp[i - 2] + nums[i]);
		}
		dp.back() = *(dp.end() - 2);

		int ans = dp.back();

		// 选1
		dp[0] = 0;
		dp[1] = nums[1];
		for (int i = 2; i < dp.size(); ++i)
		{
			dp[i] = std::max(dp[i - 1], dp[i - 2] + nums[i]);
		}

		ans = std::max(ans, dp.back());

		return ans;
	}
};