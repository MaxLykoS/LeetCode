1. DP
class Solution {
public:
    int findLength(vector<int>& A, vector<int>& B) 
    {
        int Asize = A.size();
        int Bsize = B.size();
        int maxv = 0;
        auto dp = std::vector<std::vector<int>>(Asize,std::vector<int>(Bsize));
        int i,j;
        for (j = 0; j < Bsize; j++)
        {
            dp[0][j] = A[0] == B[j] ? 1 : 0;
        }
        for (i = 0; i < Asize; i++)
        {
            dp[i][0] = A[i] == B[0] ? 1 : 0;
        }
        for (i = 1; i < Asize; i++)
        {
            for(j = 1;j<Bsize;j++)
            {
                if (A[i] == B[j])
                {
                    dp[i][j] = dp[i-1][j-1] + 1;
                }
                maxv = std::max(maxv, dp[i][j]);
            }
        }
        return maxv;
    }
};