class Solution {
public:
vector<vector<int>> merge(vector<vector<int>>& intervals) 
{
	if (intervals.empty())
		return vector<vector<int>>();
	sort(intervals.begin(), intervals.end(), [](vector<int>& a, vector<int>& b) {return a[0] < b[0]; });
	int size = intervals.size();
	vector<vector<int>> ans(1,intervals.front());
	int left, right;
	for (int i = 1; i < size; ++i)
	{
		vector<int>& v = ans.back();                       //   v[0]  v[1]   left right
		left = intervals[i][0], right = intervals[i][1];  //      1    4      2     3    
		if (left <= v[0] && right >= v[1])
		{
			v[0] = left;
			v[1] = right;
		}
		else if (left >= v[0] && left <= v[1] && right >= v[1])
			v[1] = right;
		else if (left <= v[0] && right >= v[0] && right <= v[1])
			v[0] = left;
		else if (left >= v[0] && right <= v[1])
			;
		else
			ans.push_back({ left,right });
	}
	return ans;
}
};