class Solution {
public:
std::vector<int> decode(std::vector<int>& encoded)
    {
        auto perm = std::vector<int>(encoded.size()+1, 0);
        
        int XORencoded = 1;
        for (size_t i = 2; i <= perm.size(); ++i)
        {
            XORencoded ^= i;
        }

        int XORright = encoded[1];
        for (size_t i = 3; i < encoded.size(); i+=2)
        {
            XORright ^= encoded[i];
        }

        perm[0] = XORencoded ^ XORright;
        for (size_t i = 1; i < perm.size(); ++i)
        {
            perm[i] = encoded[i - 1] ^ perm[i - 1];
        }

        return perm;
    }
};