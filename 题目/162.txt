class Solution {
public:
    bool fnd = false;
    int ans;
    void bs(int left, int right, const std::vector<int>& nums)
    {
        if (fnd)
            return;
        int mid = (left + right) / 2;
        if (nums[mid] > nums[mid + 1] && nums[mid] > nums[mid - 1])
        {
            fnd = true;
            ans = mid;
            return;
        }
        if(left+1!=mid)
            bs(left, mid, nums);
        if(mid+1!=right)
            bs(mid, right, nums);
    }
    int findPeakElement(vector<int>& nums) 
    {
        if (nums.empty())
            return -1;
        if (nums.size() == 1)
            return 0;
        if (nums[0] > nums[1])
            return 0;
        if (nums.back() > nums[nums.size() - 2])
            return nums.size() - 1;

        bs(0, nums.size() - 1, nums);
        return ans;
    }
};