class Solution {
public:
    bool searchMatrix(std::vector<std::vector<int>>& matrix, int target)
    {
        if (matrix.empty())
            return false;
        if (matrix.size() == 1 && matrix[0].size() == 1)
            return matrix[0][0] == target ? true : false;
        if (matrix[0][0] > target)
            return false;

        int col = 0, row = 0;
        int left = 0, right = matrix.size() - 1;
        int mid = 0;
        int pos = 0;

        while (left < right)
        {
            mid = (left + right) / 2;
            if (matrix[mid][0] == target)
                return true;
            else if (matrix[mid][0] < target)
            {
                left = mid + 1;
                pos = left;
            }
            else
            {
                right = mid;
                pos = right;
            }
        }
        row = pos;
        if (matrix[row][0] > target)
            row -= 1;

        left = 0, right = matrix[row].size();
        while (left < right)
        {
            mid = (left + right) / 2;
            if (matrix[row][mid] == target)
                return true;
            else if (matrix[row][mid] < target)
            {
                left = mid + 1;
            }
            else
                right = mid;
        }

        return false;
    }
};