class Solution {
public:
    int numWays(int steps, int arrLen) 
    {
        int maxColumn = std::min(arrLen - 1, steps);
        auto dp = std::vector<std::vector<int>>(steps + 1, std::move(std::vector<int>(maxColumn + 1, 0)));
        const int M = 1000000000 + 7;

        dp[0][0] = 1;

        for (int i = 1; i <=steps; ++i)
        {
            for (int j = 0; j <= maxColumn; ++j)
            {
                dp[i][j] = dp[i - 1][j];
                if (j - 1 >= 0)
                    dp[i][j] = (dp[i][j] + dp[i - 1][j - 1])%M;
                if (j + 1 < dp[i].size())
                    dp[i][j] = (dp[i][j] + dp[i - 1][j + 1])%M;
            }
        }

        return dp[steps][0];
    }
};