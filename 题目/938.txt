/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int rangeSumBST(TreeNode* root, int low, int high) 
    {
        int sum = 0;
        auto stack = std::stack<TreeNode*>();
        TreeNode* node = root;
        while (node!=nullptr||!stack.empty())
        {
            while (node)
            {
                stack.push(node);
                node = node->left;
            }
            node = stack.top();
            stack.pop();
            if (node->val > high)break;
            if (node->val >= low)
                sum += node->val;
            node = node->right;
        }
        return sum;
    }
};