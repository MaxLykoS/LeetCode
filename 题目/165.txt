class Solution
{
public:
    int findRight(int start, std::string& s)
    {
        int right = start;
        while (right<s.size()&&s[right]!='.')
        {
            ++right;
        }
        return right;
    }
    int compareVersion(std::string version1, std::string version2) 
    {
        int start1 = 0, start2 = 0;

        while (start1<version1.size() && start2<version2.size())
        {
            int end1 = findRight(start1, version1);
            int end2 = findRight(start2, version2);

            int v1 = std::atoi(version1.substr(start1, end1 - start1 + 1).c_str());
            int v2 = std::atoi(version2.substr(start2, end2 - start2 + 1).c_str());

            if (v1 > v2)return 1;
            if (v1 < v2)return -1;

            start1 = end1 + 1;
            start2 = end2 + 1;
        }

        if (start1 >= version1.size())
        {
            while (start2<version2.size())
            {
                if (version2[start2] != '.' && version2[start2] != '0')
                    return -1;
                ++start2;
            }
        }
        if (start2 >= version2.size())
        {
            while (start1 < version1.size())
            {
                if (version1[start1] != '.' && version1[start1] != '0')
                    return 1;
                ++start1;
            }
        }

        return 0;
    }
};