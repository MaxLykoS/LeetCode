class Solution
{
public:
	int minDistance(std::string text1, std::string text2)
	{
		if (text1.empty())
			return text2.size();
		if (text2.empty())
			return text1.size();

		std::vector<std::vector<int>> dp(text1.size() + 1, std::vector<int>(text2.size() + 1, 0));

		for (int i = 0; i < dp[0].size(); ++i)
		{
			dp[0][i] = i;
		}
		for (int i = 0; i < dp.size(); ++i)
		{
			dp[i][0] = i;
		}

		for (int i = 1; i < dp.size(); ++i)
		{
			for (int j = 1; j < dp[i].size(); ++j)
			{
				if (text1[i-1] == text2[j-1])
				{
					dp[i][j] = dp[i - 1][j - 1];
				}
				else
				{
					dp[i][j] = 1 + std::min(dp[i - 1][j - 1], std::min(dp[i - 1][j], dp[i][j - 1]));
				}
			}
		}

		return dp.back().back();
	}
};