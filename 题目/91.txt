class Solution {
public:
    int numDecodings(std::string s)
    {
        if (s.size() == 0||s[0]=='0')
            return 0;
        else if (s.size() == 1)
            return s[0]=='0'?0:1;
        int ans = 0;
        auto dp = std::vector<int>(s.size(),0);
        dp[0] = 1;
        if ((s[0] - '0') * 10 + s[1] - '0' <= 26)
        {
            if (s[1] != '0') // 11
                dp[1] = 2;
            else  //10
                dp[1] = 1;
        }
        else
        {
            if (s[1] == '0') //60
                return 0;
            else  //61
                dp[1] = 1;
        }
        for (int i = 2; i < s.size(); i++)
        {
            dp[i] = dp[i - 1];
            if (s[i] == '0')
            {
                if (s[i - 1] >= '3'||s[i-1]=='0')  //  1030
                {
                    return 0;
                }
                else                  //  1020
                {
                    if(s[i-1]-'0'+(s[i-2]-'0')*10<=26&&s[i-2]!='0')
                        dp[i] -= (dp[i-1] - dp[i-2]);
                }
            }
            else if (s[i] - '0' + (s[i - 1] - '0') * 10 <= 26)
            { 
                if (s[i - 1] != '0')
                    dp[i] += dp[i - 2];
            }
        }
        return dp.back();
    }
};