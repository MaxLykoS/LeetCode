class Solution 
{
public:
    int numDecodings(std::string s) 
    {
        int len = s.size();
        if (len == 0 || s[0] == '0')
            return 0;
        if (len == 1)
            return 1;
        auto dp = std::vector<int>(s.size(), 0);
        dp[0] = 1;

        if (s[1] == '0')
        {
            if (s[0] >= '3')
                return 0;
            else
                dp[1] = 1;
        }
        else
        {
            if ((s[0] - '0') * 10 + s[1] - '0' > 26)
                dp[1] = 1;
            else
                dp[1] = 2;
        }

        if (len == 2)
            return dp[1];
        for (int i = 2; i < len; i++)
        {
            int num = (s[i - 1] - '0') * 10 + (s[i] - '0');
            if (s[i] == '0'&&s[i-1]=='0')
            {
                return 0;
            }
            else if(s[i] != '0' && s[i - 1] != '0')
            {
                if (num <= 26)
                    dp[i] = dp[i - 1] + dp[i - 2];
                else
                    dp[i] = dp[i - 1];
            }
            else if (s[i] == '0' && s[i - 1] != '0')
            {
                if (num <= 26)
                    dp[i] = dp[i - 2];
                else
                    return 0;
            }
            else
            {
                if ((s[i - 2] - '0') * 10 + s[i - 1] - '0' <= 26)
                    dp[i] = dp[i - 1];
                else
                    return 0;
            }
        }
        return dp.back();
    }
};