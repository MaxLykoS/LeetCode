class Solution
{
public:
	int numDecodings(std::string s)
	{
		if (s.empty() || s.front() == '0')
			return 0;

		std::vector<int> dp(s.size(), 0);

		dp[0] = 1;
		if (s.size() >= 2)
		{
			int code = (s[0] - '0') * 10 + s[1] - '0';
			if (s[1] == '0')
			{
				if (code > 26)
					return 0;
				else
					dp[1] = 1;
			}
			else
				dp[1] = code > 26 ? 1 : 2;

		}
		for (int i = 2; i < s.size(); ++i)
		{
			if (s[i] == '0')
			{
				if (s[i - 1] == '1' || s[i - 1] == '2')
					dp[i] = dp[i - 2];
				else
					return 0;
			}
			else if (s[i - 1] == '1')
			{
				dp[i] = dp[i - 1] + dp[i - 2];
			}
			else if (s[i - 1] == '2')
			{
				if (s[i] >= '1' && s[i] <= '6')
					dp[i] = dp[i - 1] + dp[i - 2];
				else
					dp[i] = dp[i - 1];
			}
			else
				dp[i] = dp[i - 1];
		}

		return dp.back();
	}
};