class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) 
    {
        intervals.emplace_back(newInterval);
        std::sort(intervals.begin(), intervals.end(), [](const std::vector<int>& a, const std::vector<int>& b) {return a[0] < b[0]; });
        int size = intervals.size();
        std::vector<std::vector<int>> ans(1, intervals.front());
        int left, right;
        for (int i = 1; i < size; ++i)
        {
            std::vector<int>& v = ans.back();                       //   v[0]  v[1]   left right
            left = intervals[i][0], right = intervals[i][1];  //      1    4      2     3    
            if (left <= v[0] && right >= v[1])
            {
                v[0] = left;
                v[1] = right;
            }
            else if (left >= v[0] && left <= v[1] && right >= v[1])
                v[1] = right;
            else if (left <= v[0] && right >= v[0] && right <= v[1])
                v[0] = left;
            else if (left >= v[0] && right <= v[1])
                ;
            else
                ans.push_back({ left,right });
        }
        return ans;
    }
};