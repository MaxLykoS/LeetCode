#pragma once
#include "Common.h"

class Solution
{
public:
	std::string longestPalindrome(std::string s)
	{
		if (s.size() == 1)
			return s;

		std::vector<std::vector<bool>> dp(s.size(), std::vector<bool>(s.size(), false));

		int maxleft = 0, maxright = 0;

		for (int i = 0; i < s.size(); ++i)
			dp[i][i] = true;

		for (int i = s.size() - 1; i >= 0; --i)
		{
			for (int j = i + 1; j < s.size(); ++j)
			{
				if (s[i] == s[j] && (i + 1 == j || dp[i + 1][j - 1]))
				{
					dp[i][j] = true;
					if (j - i > maxright - maxleft)
					{
						maxleft = i;
						maxright = j;
					}
				}
			}
		}

		return s.substr(maxleft, maxright - maxleft + 1);
	}
};