class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) 
    {
        if (triangle.empty())
            return 0;
        else if (triangle.size() == 1)
            return triangle[0][0];
        else if (triangle.size() == 2)
            return triangle[0][0] + std::min(triangle[1][0], triangle[1][1]);
        else
        {
            for (int i = 1; i < triangle.size(); i++)
            {
                triangle[i][0] += triangle[i - 1][0];
                triangle[i][triangle[i].size() - 1] += triangle[i - 1][triangle[i - 1].size() - 1];
            }
            for (int i = 2; i < triangle.size(); i++)
            {
                for (int j = 1; j < triangle[i].size() - 1; j++)
                    triangle[i][j] += std::min(triangle[i - 1][j], triangle[i - 1][j - 1]);
            }
            return *std::min_element(triangle.back().begin(), triangle.back().end());
        }
    }
};