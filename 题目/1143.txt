class Solution
{
public:
    int longestCommonSubsequence(std::string text1, std::string text2)
    {
        std::vector<std::vector<int>> dp(text1.size(), std::vector<int>(text2.size(), 0));

        int index = text2.find_first_of(text1[0]);
        for (int i = index; i < text2.size(); ++i)
            dp[0][i] = 1;

        index = text1.find_first_of(text2[0]);
        for (int i = index; i < text1.size(); ++i)
            dp[i][0] = 1;

        for(int i = 1;i<dp.size();++i)
            for (int j = 1; j < dp[i].size(); ++j)
            {
                if (text1[i] == text2[j])
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                else
                    dp[i][j] = std::max(dp[i - 1][j], dp[i][j - 1]);
            }

        return dp.back().back();
    }
};