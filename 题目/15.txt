
class Solution
{
public:
    std::vector<std::vector<int>> threeSum(std::vector<int>& nums)
    {
        auto ans = std::vector<std::vector<int>>();

        std::sort(nums.begin(), nums.end());

        for (int i = 0; i < nums.size(); i++)
        {
            if (i != 0 && nums[i] == nums[i - 1])
                continue;

            if (nums[i] > 0)
                continue;

            int left = i + 1, right = nums.size() - 1;
            int target = -nums[i];
            while (left <right)
            {
                if (left > i+1 && nums[left - 1] == nums[left])
                {
                    ++left;
                    continue;
                }
                if (right <= nums.size() - 2 && nums[right]== nums[right + 1])
                {   
                    --right;
                    continue;
                }

                int sum = nums[left] + nums[right];
                if (sum == target)
                    ans.emplace_back(std::move(std::vector<int>({ nums[i], nums[left], nums[right] })));
                if (sum > target)
                    --right;
                else
                    ++left;
            }
        }

        return ans;
    }
};