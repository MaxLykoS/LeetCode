class Solution {
public:
vector<vector<int>> threeSum(vector<int>& nums) 
{
sort(nums.begin(), nums.end());
	vector<vector<int>> v;
	if (nums.empty() || nums.front() > 0 || nums.back() < 0 || nums.size() < 3)
		return v;
	int sum, middle, right;
	for (int left = 0; left < nums.size() - 2; ++left)
	{
		if (nums[left] > 0)
			break;
		if (left != 0 && nums[left] == nums[left - 1])
			continue;
		middle = left + 1;
		right = nums.size() - 1;
		while (middle < right)
		{
			sum = nums[left] + nums[middle] + nums[right];
			if (sum == 0)
			{
				v.push_back({ nums[left],nums[middle],nums[right] });
				while (middle < right && nums[middle] == nums[middle + 1])
					++middle;
				while (middle < right && nums[right] == nums[right - 1])
					--right;
				++middle;
				--right;
			}
			else if (sum > 0)
				--right;
			else if (sum < 0)
				++middle;
		}
	}
	return v;
}
};