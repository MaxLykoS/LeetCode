class Solution
{
public:
	int lengthOfLIS(std::vector<int>& nums)
	{
		if (nums.empty() || nums.size() == 1)
			return nums.size();
		std::vector<int> dp(nums.size(), 0);
		dp[0] = 1;
		
		for (int i = 1; i < nums.size(); ++i)
		{
			bool found = false;
			int maxVal = std::numeric_limits<int>::min();
			int maxIndex = 0;
			for (int j = i - 1; j >= 0; --j)
			{
				if (nums[j] < nums[i])
				{
					if (dp[j] > maxVal)
					{
						maxVal = dp[j];
						maxIndex = j;
					}
					found = true;
				}
			}
			if (found)
				dp[i] = dp[maxIndex] + 1;
			if (!found)
				dp[i] = 1;
		}

		return *std::max_element(dp.begin(), dp.end());
	}
};