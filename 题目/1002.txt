1.
class Solution {
public:
vector<string> commonChars(vector<string>& A) 
{
	vector<string> ans;
	size_t charCount[26];
	memset(charCount, 101, sizeof(charCount));

	size_t tempCharCount[26];
	memset(tempCharCount, 0, sizeof(tempCharCount));

	for (string s : A)
	{
		for (int i = 0; i < s.size(); ++i)
		{
			++tempCharCount[s[i] - 97];
		}
		for (int i = 0; i < 26; ++i)
		{
			charCount[i] = min(charCount[i], tempCharCount[i]);
		}
		memset(tempCharCount, 0, sizeof(tempCharCount));
	}

	for (int i = 0; i < 26; ++i)
	{
		while (charCount[i]--)
			ans.push_back(string(1, char(i + 97)));
	}

	return ans;
}
};
2.
class Solution {
public:
vector<string> commonChars(vector<string>& A)
{
	vector<string> ans;
	int book[100][26];
	memset(book, 0, sizeof(book));

	for (int i = 0; i < A.size(); ++i)
	{
		for (char c : A[i])
		{
			++book[i][c - 'a'];
		}
	}

	for (int i = 0; i < 26; ++i)
	{
		int minVal = INT_MAX;
		for (int j = 0; j < A.size(); ++j)
		{
			if (book[j][i] == 0)
			{
				minVal = 0;
				break;
			}
			minVal = min(book[j][i], minVal);
		}
		while (minVal--)
		{
			ans.push_back(string(1,char(i + 'a')));
		}
	}
	return ans;
}
};