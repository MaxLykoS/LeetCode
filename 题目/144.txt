/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    std::vector<int> preorderTraversal(TreeNode* root)
    {
        auto ans = std::vector<int>();
        if (root == nullptr)
            return ans;
        auto stack = std::stack<TreeNode*>();
        TreeNode* node = root;
        while (!stack.empty()||node!=nullptr)
        {
            while (node!=nullptr)
            {
                ans.emplace_back(node->val);
                stack.emplace(node);
                node = node->left;
            }
            node = stack.top();
            stack.pop();
            node = node->right;
        }
        return ans;
    }
};